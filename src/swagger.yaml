openapi: 3.0.0
info:
  title: Notes Collaboration API
  description: API for managing notes, users, collaborations, and password reset with OTP verification.
  version: 1.0.0
  contact:
    name: Uday Narayan Mukherjee
servers:
  - url: "http://localhost:8080/api/v1"
    description: Local development server
security:
  - bearerAuth: []
paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Create a new user with email, name, password, and avatar.
      operationId: registerUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "200":
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  token:
                    type: string
                    example: "jwt_token_here"
        "400":
          description: Bad request, invalid input
        "500":
          description: Server error

  /auth/login:
    post:
      summary: Login to an existing account
      description: Authenticate a user with email and password, return a JWT token if credentials are valid.
      operationId: loginUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  token:
                    type: string
                    example: "jwt_token_here"
        "403":
          description: Invalid credentials
        "404":
          description: User not found
        "500":
          description: Server error

  /auth/password-reset:
    post:
      summary: Request password reset
      operationId: requestPasswordReset
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordResetRequest"
      responses:
        "200":
          description: OTP sent to the user's email
        "404":
          description: User not found

  /auth/verify-otp:
    post:
      summary: Verify OTP for password reset
      operationId: verifyOtp
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyOtpRequest"
      responses:
        "200":
          description: OTP verified successfully
        "400":
          description: Invalid or expired OTP

  /notes:
    post:
      summary: Create a new note
      operationId: createNote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNoteRequest"
      responses:
        "200":
          description: Note created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          description: Bad Request

    get:
      summary: Get all notes
      operationId: getNotes
      responses:
        "200":
          description: List of notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"

  /notes/{id}:
    get:
      summary: Get particular notes
      operationId: getNote
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Note ID
      responses:
        "200":
          description: Gets requested note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"

    put:
      summary: Update an existing note
      operationId: updateNote
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Note ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNoteRequest"
      responses:
        "200":
          description: Note updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "404":
          description: Note not found

    delete:
      summary: Delete a note
      operationId: deleteNote
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Note ID
      responses:
        "200":
          description: Note deleted successfully
        "404":
          description: Note not found

  /notes/{id}/collaborators:
    get:
      summary: Get collaborators for a note
      operationId: getCollaborators
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Note ID
      responses:
        "200":
          description: List of collaborators for the note
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Collaboration"

  /notes/invite:
    post:
      summary: Invite a user to collaborate on a note.
      operationId: inviteCollaborator
      tags:
        - Collaboration
      requestBody:
        description: Data required to invite a user to collaborate on a note.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                noteId:
                  type: integer
                  description: The ID of the note to collaborate on.
                  example: 1
                email:
                  type: string
                  format: email
                  description: The email of the user to invite.
                  example: user@example.com
              required:
                - noteId
                - email
      responses:
        "200":
          description: Successfully invited user to collaborate on the note.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID of the created collaboration.
                    example: 42
                  userId:
                    type: integer
                    description: ID of the user being invited to collaborate.
                    example: 123
                  noteId:
                    type: integer
                    description: ID of the note that the collaboration is for.
                    example: 1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        name:
          type: string
          example: "John Doe"
        password:
          type: string
          format: password
          example: "password123"
        avatar:
          type: string
          format: uri
          example: "https://example.com/avatar.png"
      required:
        - email
        - name
        - password

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          format: password
          example: "password123"
      required:
        - email
        - password

    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          example: user@example.com
      required:
        - email

    VerifyOtpRequest:
      type: object
      properties:
        email:
          type: string
          example: user@example.com
        otp:
          type: string
          example: "123456"
      required:
        - email
        - otp

    CreateNoteRequest:
      type: object
      properties:
        title:
          type: string
          example: "Meeting Notes"
        description:
          type: string
          example: "Notes from today's meeting"
        createdBy:
          type: integer
          example: 1
      required:
        - title
        - description
        - createdBy

    UpdateNoteRequest:
      type: object
      properties:
        title:
          type: string
          example: "Updated Meeting Notes"
        description:
          type: string
          example: "Updated notes from today's meeting"
      required:
        - title
        - description

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: user@example.com
        name:
          type: string
          example: John Doe
        joinedOn:
          type: string
          format: date-time
          example: "2025-02-02T00:00:00Z"
        avatar:
          type: string
          format: url

    Note:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Meeting Notes"
        description:
          type: string
          example: "Notes from today's meeting"
        createdBy:
          type: integer
          example: 1
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        CreatedBy:
          $ref: "#/components/schemas/User"
        Collaborations:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Collaboration"

    Collaboration:
      type: object
      properties:
        id:
          type: integer
          example: 1
        userId:
          type: integer
          example: 1
        noteId:
          type: integer
          example: 1
        User:
          nullable: true
          $ref: "#/components/schemas/User"

    PasswordReset:
      type: object
      properties:
        id:
          type: integer
          example: 1
        otp:
          type: string
          example: "123456"
        expiry:
          type: string
          format: date-time
          example: "2025-02-02T00:00:00Z"
        userId:
          type: integer
          example: 1
        createdAt:
          type: string
          format: date-time
          example: "2025-02-02T00:00:00Z"
